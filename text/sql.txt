-- a simple SQL example to show the use of subqueries
-- through retrieving the best movies of my youth from a movies database

SELECT
	r.mov_title AS "The movie",
	r.mov_year AS "released in",
	actor.act_fname AS "starred",
	actor.act_lname AS "by",
	movie_cast.role AS "in the role of",
	r.rev_stars AS "got stars (out of 10)"
FROM
	(SELECT m.mov_id, m.mov_title, m.mov_year, m.rev_stars FROM
		(SELECT movie.mov_id, movie.mov_title, movie.mov_year, rating.rev_stars FROM movie
			INNER JOIN rating
			ON rating.mov_id = movie.mov_id
			WHERE mov_year BETWEEN 1980 AND 2000) AS m
		WHERE m.rev_stars > 8) AS r
INNER JOIN movie_cast ON r.mov_id = movie_cast.mov_id
INNER JOIN actor ON actor.act_id = movie_cast.act_id
ORDER BY r.mov_year;

-- a simple T-SQL sample to create stored procedures
-- that will save the user details and the messages
-- by calling other sp-s, but first checking if the user
-- does already exists by phone and email

DELIMITER $$

CREATE PROCEDURE saveEnquiry (
	IN cName		VARCHAR(50),
	IN cCo			VARCHAR(50),
	IN cMail		VARCHAR(30),
	IN cPhone		VARCHAR(13),
	IN mSubj		VARCHAR(50),
	IN mCont		TEXT,
	INOUT cId		INT)
	
BEGIN
SELECT contact_id INTO cId
FROM tbl_contacts
WHERE contact_phone = cPhone
AND contact_email = cMail;

IF cId IS NULL THEN
CALL saveContact(cName, cCo, cMail, cPhone, cId);
END IF;

CALL saveMsg(cId, sId, mCont);
END$$

CREATE PROCEDURE saveContact (
	IN cName		VARCHAR(50),
	IN cCo			VARCHAR(50),
	IN cMail		VARCHAR(30),
	IN cPhone		VARCHAR(13),
	OUT cId			INT)
	
BEGIN
	INSERT INTO tbl_contacts (contact_name, contact_company, contact_email, contact_phone)
	VALUES ( cName, cCo, cMail, cPhone);
	SELECT LAST_INSERT_ID() INTO cId;
END$$

CREATE PROCEDURE saveMsg (
	IN cId			INT,
	IN mSubj		VARCHAR(50),
	IN mCont		TEXT)
	
BEGIN
	INSERT INTO tbl_messages (contact_id, msg_subject, msg_content)
	VALUES (cId, mSubj, mCont);
END$$

DELIMITER ;